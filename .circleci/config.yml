# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1

#Commands section
commands:
  print_pipeline_id:
    description: "Print workflow ID"
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
# Orchestrate or schedule a set of jobs
jobs:
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: echo "hello"
  print_world:  
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: echo "world"
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: echo "hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt
  print_myname:  
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: "echo an env var that is part of our project"
          command: |
            echo $myname # this env var must be swt within the project
  print_workflow_id:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
  test_onfail_scenario:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: return 1
      #called on fail
      - run:
          name: Run this on fail of previous run
          when: on_fail
          command: echo "Test fail call passed!!!"
    

workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - welcome/run
      - print_hello
      - print_world:
          requires:
            - print_hello
      - print_myname
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
      - print_workflow_id
      - test_onfail_scenario